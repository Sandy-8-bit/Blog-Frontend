@page "/post-slide"
@inject HttpClient Http

<h3 class="m-5">Create a New Slide</h3>

<div class="form-container">
    <div class="form-group">
        <label>Image URL:</label>
        <input @bind="slide.ImageUrl" />
    </div>

    <div class="form-group">
        <label>Category:</label>
        <input @bind="slide.Category" />
    </div>

    <div class="form-group">
        <label>Title:</label>
        <select @bind="slide.Title">
            <option value="">-- Select Title --</option>
            <option value="Travel">Travel</option>
            <option value="Adventure">Adventure</option>
            <option value="Movie">Movie</option>
            <option value="Tech">Tech</option>
        </select>
    </div>

    <div class="form-group">
        <label>Date:</label>
        <input @bind="slide.Date" />
    </div>

    <div class="form-group">
        <label>Description:</label>
        <textarea @bind="slide.Description"></textarea>
    </div>

    <button @onclick="SubmitSlide">Submit</button>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="message">@message</p>
    }
</div>

<style>
    .form-container {
        max-width: 500px;
        margin: 20px auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background: #f9f9f9;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    input, select, textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    textarea {
        height: 80px;
        resize: vertical;
    }

    button {
        width: 100%;
        padding: 10px;
        background: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: 0.3s;
    }

        button:hover {
            background: #0056b3;
        }

    .message {
        margin-top: 15px;
        font-weight: bold;
        color: green;
    }
</style>

@code {
    private Slide slide = new() { Id = null, Date = DateTime.UtcNow.ToString("yyyy-MM-dd") };
    private string? message;

    private async Task SubmitSlide()
    {
        slide.Id = null; // Ensure Id is not sent
        var response = await Http.PostAsJsonAsync("https://localhost:7061/api/slider", slide);

        if (response.IsSuccessStatusCode)
        {
            message = "Slide posted successfully!";
            slide = new() { Id = null, Date = DateTime.UtcNow.ToString("yyyy-MM-dd") };
        }
        else
        {
            var errorResponse = await response.Content.ReadAsStringAsync();
            message = $"Error: {response.StatusCode} - {errorResponse}";
        }
    }

    public class Slide
    {
        public string? Id { get; set; }
        public string ImageUrl { get; set; } = string.Empty;
        public string Category { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Date { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
    }
}
